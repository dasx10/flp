import type Lambda from "../Types/Lambda";

export default function compose<Return, A, B>(values: readonly [
  (x: B) => Return,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C>(values: readonly [
  (x: C) => Return,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D>(values: readonly [
  (x: D) => Return,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E>(values: readonly [
  (x: E) => Return,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F>(values: readonly [
  (x: F) => Return,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G>(values: readonly [
  (x: G) => Return,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H>(values: readonly [
  (x: H) => Return,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I>(values: readonly [
  (x: I) => Return,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J>(values: readonly [
  (x: J) => Return,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K>(values: readonly [
  (x: K) => Return,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L>(values: readonly [
  (x: L) => Return,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M>(values: readonly [
  (x: M) => Return,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N>(values: readonly [
  (x: N) => Return,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O>(values: readonly [
  (x: O) => Return,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P>(values: readonly [
  (x: P) => Return,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q>(values: readonly [
  (x: Q) => Return,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R>(values: readonly [
  (x: R) => Return,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S>(values: readonly [
  (x: S) => Return,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T>(values: readonly [
  (x: T) => Return,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U>(values: readonly [
  (x: U) => Return,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V>(values: readonly [
  (x: V) => Return,
  (x: U) => V,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W>(values: readonly [
  (x: W) => Return,
  (x: V) => W,
  (x: U) => V,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X>(values: readonly [
  (x: X) => Return,
  (x: W) => X,
  (x: V) => W,
  (x: U) => V,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y>(values: readonly [
  (x: Y) => Return,
  (x: X) => Y,
  (x: W) => X,
  (x: V) => W,
  (x: U) => V,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;

export default function compose<Return, A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z>(values: readonly [
  (x: Z) => Return,
  (x: Y) => Z,
  (x: X) => Y,
  (x: W) => X,
  (x: V) => W,
  (x: U) => V,
  (x: T) => U,
  (x: S) => T,
  (x: R) => S,
  (x: Q) => R,
  (x: P) => Q,
  (x: O) => P,
  (x: N) => O,
  (x: M) => N,
  (x: L) => M,
  (x: K) => L,
  (x: J) => K,
  (x: I) => J,
  (x: H) => I,
  (x: G) => H,
  (x: F) => G,
  (x: E) => F,
  (x: D) => E,
  (x: C) => D,
  (x: B) => C,
  (x: A) => B,
]): Lambda<Return, A>;
