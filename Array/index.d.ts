export interface ArrayNamespace {
  // public readonly allRight             : Promise<typeof import("./allRight").default>,
  // public readonly anyRight             : Promise<typeof import("./anyRight").default>,
  // public readonly countRight           : Promise<typeof import("./countRight").default>,
  // public readonly countWhere           : Promise<typeof import("./countWhere").default>,
  // public readonly countWhereEq         : Promise<typeof import("./countWhereEq").default>,
  // public readonly countWhereIs         : Promise<typeof import("./countWhereNotEq").default>,
  // public readonly countWhereNe         : Promise<typeof import("./countWhereNotEq").default>,
  // public readonly indexesOf            : Promise<typeof import("./indexesOf").default>,
  // public readonly rejectIndexMax       : Promise<typeof import("./rejectIndexMax").default>,
  // public readonly rejectIndexMaxRight  : Promise<typeof import("./rejectIndexMaxRight").default>,
  // public readonly rejectIndexMin       : Promise<typeof import("./rejectIndexMin").default>,
  // public readonly rejectIndexMinRight  : Promise<typeof import("./rejectIndexMinRight").default>,
  // public readonly rejectIndexRight     : Promise<typeof import("./rejectIndexRight").default>,
  //public readonly excludes              : Promise<typeof import("./excludes").default>,
  //public readonly excludesLast          : Promise<typeof import("./excludesLast").default>,
  public readonly after                   : Promise<typeof import("./after").default>,
  public readonly all                     : Promise<typeof import("./all").default>,
  public readonly any                     : Promise<typeof import("./any").default>,
  public readonly append                  : Promise<typeof import("./append").default>,
  public readonly at                      : Promise<typeof import("./at").default>,
  public readonly concat                  : Promise<typeof import("./concat").default>,
  public readonly concatRight             : Promise<typeof import("./concatRight").default>,
  public readonly count                   : Promise<typeof import("./count").default>,
  public readonly countFrom               : Promise<typeof import("./countFrom").default>,
  public readonly countFromRight          : Promise<typeof import("./countFromRight").default>,
  public readonly dimension               : Promise<typeof import("./dimension").default>,
  public readonly drop                    : Promise<typeof import("./drop").default>,
  public readonly empty                   : Promise<typeof import("./empty").default>,
  public readonly eq                      : Promise<typeof import("./eq").default>,
  public readonly every                   : Promise<typeof import("./every").default>,
  public readonly everyAdapterAll         : Promise<typeof import("./everyAdapterAll").default>,
  public readonly everyRight              : Promise<typeof import("./everyRight").default>,
  public readonly filter                  : Promise<typeof import("./filter").default>,
  public readonly filterRight             : Promise<typeof import("./filterRight").default>,
  public readonly filterWhere             : Promise<typeof import("./filterWhere").default>,
  public readonly filterWhereEq           : Promise<typeof import("./filterWhereEq").default>,
  public readonly filterWhereIs           : Promise<typeof import("./filterWhereIs").default>,
  public readonly filterWhereNot          : Promise<typeof import("./filterWhereNot").default>,
  public readonly find                    : Promise<typeof import("./find").default>,
  public readonly findIndex               : Promise<typeof import("./findIndex").default>,
  public readonly findIndexAdapterEvery   : Promise<typeof import("./findIndexAdapterEvery").default>,
  public readonly findIndexAdapterFind    : Promise<typeof import("./findIndexAdapterFind").default>,
  public readonly findIndexAdapterSome    : Promise<typeof import("./findIndexAdapterSome").default>,
  public readonly findIndexMax            : Promise<typeof import("./findIndexMax").default>,
  public readonly findIndexMin            : Promise<typeof import("./findIndexMin").default>,
  public readonly findIndexWhere          : Promise<typeof import("./findIndexWhere").default>,
  public readonly findIndexWhereEq        : Promise<typeof import("./findIndexWhereEq").default>,
  public readonly findIndexWhereIs        : Promise<typeof import("./findIndexWhereIs").default>,
  public readonly findIndexWhereNot       : Promise<typeof import("./findIndexWhereNot").default>,
  public readonly findLast                : Promise<typeof import("./findLast").default>,
  public readonly findLastIndex           : Promise<typeof import("./findLastIndex").default>,
  public readonly findLastIndexMax        : Promise<typeof import("./findLastIndexMax").default>,
  public readonly findLastIndexMin        : Promise<typeof import("./findLastIndexMin").default>,
  public readonly findLastIndexWhere      : Promise<typeof import("./findLastIndexWhere").default>,
  public readonly findLastIndexWhereEq    : Promise<typeof import("./findLastIndexWhereEq").default>,
  public readonly findLastIndexWhereIs    : Promise<typeof import("./findLastIndexWhereIs").default>,
  public readonly findLastIndexWhereNot   : Promise<typeof import("./findLastIndexWhereNot").default>,
  public readonly findLastIndexWhereNotEq : Promise<typeof import("./findLastIndexWhereNotEq").default>,
  public readonly findLastIndexWhereNotIs : Promise<typeof import("./findLastIndexWhereNotIs").default>,
  public readonly findLastMax             : Promise<typeof import("./findLastMax").default>,
  public readonly findLastMin             : Promise<typeof import("./findLastMin").default>,
  public readonly findLastWhere           : Promise<typeof import("./findLastWhere").default>,
  public readonly findLastWhereEq         : Promise<typeof import("./findLastWhereEq").default>,
  public readonly findLastWhereIs         : Promise<typeof import("./findLastWhereIs").default>,
  public readonly findLastWhereNot        : Promise<typeof import("./findLastWhereNot").default>,
  public readonly findLastWhereNotEq      : Promise<typeof import("./findLastWhereNotEq").default>,
  public readonly findLastWhereNotIs      : Promise<typeof import("./findLastWhereNotIs").default>,
  public readonly findMax                 : Promise<typeof import("./findMax").default>,
  public readonly findMin                 : Promise<typeof import("./findMin").default>,
  public readonly findWhere               : Promise<typeof import("./findWhere").default>,
  public readonly findWhereEq             : Promise<typeof import("./findWhereEq").default>,
  public readonly findWhereIs             : Promise<typeof import("./findWhereIs").default>,
  public readonly findWhereNot            : Promise<typeof import("./findWhereNot").default>,
  public readonly findWhereNotEq          : Promise<typeof import("./findWhereNotEq").default>,
  public readonly findWhereNotIs          : Promise<typeof import("./findWhereNotIs").default>,
  public readonly first                   : Promise<typeof import("./first").default>,
  public readonly forEach                 : Promise<typeof import("./forEach").default>,
  public readonly forEachRight            : Promise<typeof import("./forEachRight").default>,
  public readonly forEachWhile            : Promise<typeof import("./forEachWhile").default>,
  public readonly head                    : Promise<typeof import("./head").default>,
  public readonly include                 : Promise<typeof import("./include").default>,
  public readonly includes                : Promise<typeof import("./includes").default>,
  public readonly includesRight           : Promise<typeof import("./includesRight").default>,
  public readonly indexMax                : Promise<typeof import("./indexMax").default>,
  public readonly indexMin                : Promise<typeof import("./indexMin").default>,
  public readonly indexOf                 : Promise<typeof import("./indexOf").default>,
  public readonly indexed                 : Promise<typeof import("./indexed").default>,
  public readonly indexes                 : Promise<typeof import("./indexes").default>,
  public readonly indexesBy               : Promise<typeof import("./indexesBy").default>,
  public readonly indexesByRight          : Promise<typeof import("./indexesByRight").default>,
  public readonly indexesMax              : Promise<typeof import("./indexesMax").default>,
  public readonly indexesMaxBy            : Promise<typeof import("./indexesMaxBy").default>,
  public readonly indexesMaxByRight       : Promise<typeof import("./indexesMaxByRight").default>,
  public readonly indexesMin              : Promise<typeof import("./indexesMin").default>,
  public readonly indexesMinBy            : Promise<typeof import("./indexesMinBy").default>,
  public readonly indexesMinByRight       : Promise<typeof import("./indexesMinByRight").default>,
  public readonly individual              : Promise<typeof import("./individual").default>,
  public readonly individualBy            : Promise<typeof import("./individualBy").default>,
  public readonly individualByRight       : Promise<typeof import("./individualByRight").default>,
  public readonly individualRight         : Promise<typeof import("./individualRight").default>,
  public readonly insert                  : Promise<typeof import("./insert").default>,
  public readonly is                      : Promise<typeof import("./is").default>,
  public readonly last                    : Promise<typeof import("./last").default>,
  public readonly lastIndexMax            : Promise<typeof import("./lastIndexMax").default>,
  public readonly lastIndexMin            : Promise<typeof import("./lastIndexMin").default>,
  public readonly lastIndexOf             : Promise<typeof import("./lastIndexOf").default>,
  public readonly length                  : Promise<typeof import("./length").default>,
  public readonly limit                   : Promise<typeof import("./limit").default>,
  public readonly map                     : Promise<typeof import("./map").default>,
  public readonly mapRight                : Promise<typeof import("./mapRight").default>,
  public readonly max                     : Promise<typeof import("./max").default>,
  public readonly maxBy                   : Promise<typeof import("./maxBy").default>,
  public readonly maxOf                   : Promise<typeof import("./maxOf").default>,
  public readonly min                     : Promise<typeof import("./min").default>,
  public readonly minBy                   : Promise<typeof import("./minBy").default>,
  public readonly minOf                   : Promise<typeof import("./minOf").default>,
  public readonly ne                      : Promise<typeof import("./ne").default>,
  public readonly none                    : Promise<typeof import("./none").default>,
  public readonly noneRight               : Promise<typeof import("./noneRight").default>,
  public readonly nth                     : Promise<typeof import("./nth").default>,
  public readonly nthRight                : Promise<typeof import("./nthRight").default>,
  public readonly oIndexMax               : Promise<typeof import("./oIndexMax").default>,
  public readonly oIndexMin               : Promise<typeof import("./oIndexMin").default>,
  public readonly oIndexesMax             : Promise<typeof import("./oIndexesMax").default>,
  public readonly oIndexesMin             : Promise<typeof import("./oIndexesMin").default>,
  public readonly oLastIndexMax           : Promise<typeof import("./oLastIndexMax").default>,
  public readonly oLastIndexMin           : Promise<typeof import("./oLastIndexMin").default>,
  public readonly onMap                   : Promise<typeof import("./onMap").default>,
  public readonly prepend                 : Promise<typeof import("./prepend").default>,
  public readonly reduce                  : Promise<typeof import("./reduce").default>,
  public readonly reduceAdapterCountFrom  : Promise<typeof import("./reduceAdapterCountFrom").default>,
  public readonly reduceRight             : Promise<typeof import("./reduceRight").default>,
  public readonly reduceWhile             : Promise<typeof import("./reduceWhile").default>,
  public readonly reduceWhileCreated      : Promise<typeof import("./reduceWhileCreated").default>,
  public readonly reduceWhileRight        : Promise<typeof import("./reduceWhileRight").default>,
  public readonly reject                  : Promise<typeof import("./reject").default>,
  public readonly rejectIndex             : Promise<typeof import("./rejectIndex").default>,
  public readonly rejectRight             : Promise<typeof import("./rejectRight").default>,
  public readonly rejectWhere             : Promise<typeof import("./rejectWhere").default>,
  public readonly rejectWhereEq           : Promise<typeof import("./rejectWhereEq").default>,
  public readonly rejectWhereIs           : Promise<typeof import("./rejectWhereIs").default>,
  public readonly rejectWhereNot          : Promise<typeof import("./rejectWhereNot").default>,
  public readonly remove                  : Promise<typeof import("./remove").default>,
  public readonly removeRight             : Promise<typeof import("./removeRight").default>,
  public readonly reverse                 : Promise<typeof import("./reverse").default>,
  public readonly second                  : Promise<typeof import("./second").default>,
  public readonly slice                   : Promise<typeof import("./slice").default>,
  public readonly sliceRight              : Promise<typeof import("./sliceRight").default>,
  public readonly some                    : Promise<typeof import("./some").default>,
  public readonly someRight               : Promise<typeof import("./someRight").default>,
  public readonly sort                    : Promise<typeof import("./sort").default>,
  public readonly sum                     : Promise<typeof import("./sum").default>,
  public readonly sumFrom                 : Promise<typeof import("./sumFrom").default>,
  public readonly sumSMI                  : Promise<typeof import("./sumSMI").default>,
  public readonly tail                    : Promise<typeof import("./tail").default>,
  public readonly uniq                    : Promise<typeof import("./uniq").default>,
  public readonly uniqBy                  : Promise<typeof import("./uniqBy").default>,
  public readonly uniqByRight             : Promise<typeof import("./uniqByRight").default>,
  public readonly uniqRight               : Promise<typeof import("./uniqRight").default>,
}

declare const ArrayNamespace: ArrayNamespace;
export default ArrayNamespace;
